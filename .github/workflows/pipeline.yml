name: Init New Repo with Generator

on:
  workflow_dispatch:
    inputs:
      org_name:
        description: "GitHub Organization"
        required: true
        default: "ondc-official"
      repo_name:
        description: "Name of the new GitHub repo"
        required: true
      brief_description:
        description: "Short description of the repository"
        required: true
      category:
        description: "Select category"
        type: choice
        options: [specifications, reference-apps, automation-testing, mock-sandbox, adaptors, sdks, infrastructure, documentation, logs]
      subcategory:
        description: "Select subcategory"
        type: choice
        options: [buyer-apps, seller-apps, logistics-apps, ecommerce, core-framework, services, mock-servers]
      domain:
        description: "Select domain"
        type: choice
        options: [retail, logistics, agriculture, healthcare, financial, mobility, education]
      type:
        description: "Select type"
        type: choice
        options: [frontend, backend, mobile, api, library, tool, documentation]
      status:
        description: "Select status"
        type: choice
        options: [production, beta, alpha, experimental, deprecated, archived]

jobs:
  create-repo:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout self
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Create Repository (if not exists)
        run: |
          set -e
          ORG="${{ github.event.inputs.org_name }}"
          REPO="${{ github.event.inputs.repo_name }}"
          DESC="${REPO}: [${{ github.event.inputs.category }}/${{ github.event.inputs.subcategory }}] ${{ github.event.inputs.brief_description }} | status: ${{ github.event.inputs.status }} | domain: ${{ github.event.inputs.domain }}"
          REPO_CHECK=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$ORG/$REPO)
          if [ "$REPO_CHECK" -eq 200 ]; then
            echo "Repository $REPO already exists, skipping creation."
          else
            CREATE_RESP=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
              -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/orgs/$ORG/repos \
              -d @- <<EOF
          {
          "name": "$REPO",
          "private": false,
          "description": "$DESC"
          }
          EOF
            )
            if [ "$CREATE_RESP" -ne 201 ]; then
              echo "Failed to create repo. HTTP status $CREATE_RESP"
              exit 1
            fi
            echo "Repo $REPO created successfully."
          fi

      - name: Add Topics to Repo
        run: |
          ORG="${{ github.event.inputs.org_name }}"
          REPO="${{ github.event.inputs.repo_name }}"
          TOPICS="[\"category-${{ github.event.inputs.category }}\",\"subcategory-${{ github.event.inputs.subcategory }}\",\"type-${{ github.event.inputs.type }}\",\"status-${{ github.event.inputs.status }}\",\"domain-${{ github.event.inputs.domain }}\"]"
          curl -s -X PUT \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$ORG/$REPO/topics \
            -d "{\"names\": $TOPICS}"
          echo "Topics added: $TOPICS"

      - name: Setup Yeoman Generator & Scaffold Project
        run: |
          set -e
          # Create generator folder
          mkdir -p ondc-generator
          cd ondc-generator
          # Create package.json
          cat <<EOF > package.json
          {
          "name": "@ondc/generator-ondc-project",
          "version": "1.0.0",
          "description": "Yeoman generator for Node.js TypeScript projects",
          "main": "generators/app/index.js",
          "keywords": ["yeoman-generator"],
          "dependencies": {
          "yeoman-generator": "^5.9.0"
            }
          }
          EOF
          # Install generator
           npm install
           # Link locally so yo can see it
           npm link
           cd ..
           mkdir -p ${{ github.event.inputs.repo_name }}
           cd ../${{ github.event.inputs.repo_name }} || cd $GITHUB_WORKSPACE/${{ github.event.inputs.repo_name }}
           yo ondc-project --skip-install
          # Replace placeholders
          REPO_NAME="${{ github.event.inputs.repo_name }}"
          sed -i "s/test55-node-backend/$REPO_NAME/g" package.json || true
          sed -i "s/test55-node-backend/$REPO_NAME/g" package-lock.json || true
          sed -i "s/test55-node-backend/$REPO_NAME/g" README.md || true
          sed -i "s/test55-node-backend/$REPO_NAME/g" docker-compose*.yml || true

      - name: Push Scaffolded Project to Repo
        run: |
          cd ${{ github.event.inputs.repo_name }}
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git branch -M main
          git remote add origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.event.inputs.org_name }}/${{ github.event.inputs.repo_name }}.git
          git add .
          git commit -m "Initial commit from generator [skip ci]"
          git push origin main
